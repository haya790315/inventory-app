version: "3.8"

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: inventory-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot application using your existing Dockerfile
  app:
    build:
      context: .
      dockerfile: dockerfile
    container_name: inventory-app
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      # Redis configuration pointing to the redis service
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ""

      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:h2:file:./data/inventory-db
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: ""

    volumes:
      # Mount your source code so Gradle can access it
      - .:/app
      # Mount data directory for H2 database persistence
      - app_data:/app/data
    networks:
      - inventory-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  app_data:
    driver: local

networks:
  inventory-network:
    driver: bridge
